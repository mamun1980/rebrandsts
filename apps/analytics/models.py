from django.db import models


# Create your models here.
class VrsAnalytics(models.Model):
    id = models.BigAutoField(primary_key=True)
    created_at = models.DateTimeField()
    updated_at = models.DateTimeField()
    device = models.CharField(max_length=50, blank=True, null=True)
    user_source = models.CharField(max_length=50, blank=True, null=True)
    medium = models.CharField(max_length=100, blank=True, null=True)
    platform = models.CharField(max_length=100, blank=True, null=True)
    activity_time = models.DateTimeField(blank=True, null=True)
    hostname = models.CharField(max_length=200, blank=True, null=True)
    referral_page = models.TextField(blank=True, null=True)
    page_path = models.TextField(blank=True, null=True)
    feed = models.IntegerField(blank=True, null=True)
    partner_url = models.TextField(blank=True, null=True)
    pagetype = models.CharField(max_length=50, blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    usd_rate = models.FloatField(blank=True, null=True)
    partner_response = models.JSONField(blank=True, null=True)
    google_client_id = models.CharField(max_length=100, blank=True, null=True)
    transaction_id = models.CharField(unique=True, max_length=100)
    revenue_usd = models.FloatField(blank=True, null=True)
    currency = models.CharField(max_length=15, blank=True, null=True)
    continent = models.CharField(max_length=50, blank=True, null=True)
    country_code = models.CharField(max_length=30, blank=True, null=True)
    ip = models.CharField(max_length=50, blank=True, null=True)
    ad_id = models.TextField(blank=True, null=True)
    transaction_date = models.DateTimeField(blank=True, null=True)
    user_first_visit_date = models.DateField(blank=True, null=True)
    property_info = models.JSONField(blank=True, null=True)
    predicted_revenue = models.FloatField(blank=True, null=True)
    property_id = models.TextField(blank=True, null=True)
    status = models.CharField(max_length=30, blank=True, null=True)
    pz_advertiser = models.TextField(blank=True, null=True)
    pushed_to_ga = models.SmallIntegerField()
    stay_probability = models.FloatField(blank=True, null=True)
    pushed_refund_to_ga = models.SmallIntegerField()
    slack_notified = models.BooleanField(blank=True, null=True)
    updated_partner_response = models.JSONField(blank=True, null=True)
    sale_amount = models.FloatField(blank=True, null=True)
    campaign_name = models.CharField(max_length=500, blank=True, null=True)
    keywords = models.CharField(max_length=500, blank=True, null=True)
    brand_key = models.CharField(max_length=50, blank=True, null=True)
    site_key = models.CharField(max_length=50, blank=True, null=True)
    site_published_status = models.BooleanField(blank=True, null=True)
    conversion_key = models.TextField(blank=True, null=True)
    revenue_unadjusted = models.FloatField(blank=True, null=True)
    check_in_date = models.DateField(blank=True, null=True)
    check_out_date = models.DateField(blank=True, null=True)
    # travel_purpose = models.CharField(max_length=300, blank=True, null=True)
    pushed_to_ga4 = models.SmallIntegerField()
    pushed_refund_to_ga4 = models.SmallIntegerField()
    pushed_to_gads = models.CharField(max_length=7)
    estimated_ml_revenue = models.FloatField(blank=True, null=True)
    pushed_refund_to_gads = models.SmallIntegerField()
    is_user_activity_sync = models.BooleanField()
    payslip_id = models.CharField(max_length=200, blank=True, null=True)
    partner = models.CharField(max_length=50, blank=True, null=True)
    # referral_partner_key = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'vrs_analytics'
