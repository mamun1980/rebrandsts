# Generated by Django 4.2.3 on 2023-11-28 11:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('property', '0001_initial'),
        ('sts', '__first__'),
        ('partners', '0001_initial'),
        ('brands', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BrandLocationPartnerProperty',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, unique=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brands.brand')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sts.device')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sts.location')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partners.partner')),
                ('property_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.propertygroup')),
            ],
            options={
                'verbose_name': '(Kayak) Provider Order',
                'verbose_name_plural': '(Kayak) Provider Orders',
            },
        ),
        migrations.CreateModel(
            name='SetList',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, max_length=2500, null=True)),
                ('solr_fields', models.JSONField(blank=True, null=True)),
                ('default', models.PositiveSmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SetListES',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, max_length=2500, null=True)),
                ('es_fields', models.JSONField(blank=True, null=True)),
                ('default', models.PositiveSmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('index_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Set List ES',
                'verbose_name_plural': 'Set List ES',
            },
        ),
        migrations.CreateModel(
            name='SQSTerms',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, unique=True)),
                ('keyword', models.CharField(max_length=50, unique=True)),
                ('brand_type', models.CharField(choices=[('rentals', 'Rentals'), ('hotels', 'Hotels')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'SQS Term',
                'verbose_name_plural': 'SQS Terms',
            },
        ),
        migrations.CreateModel(
            name='SiteEnableSetsES',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, unique=True)),
                ('active', models.BooleanField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brands', models.ManyToManyField(to='brands.brand')),
                ('set_list', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sqs.setlistes')),
            ],
            options={
                'verbose_name': 'Site Enable Set ES',
                'verbose_name_plural': 'Site Enable Sets ES',
            },
        ),
        migrations.CreateModel(
            name='SiteEnableSets',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, unique=True)),
                ('active', models.BooleanField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('set_list', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sqs.setlist')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='brands.brand')),
            ],
        ),
        migrations.CreateModel(
            name='BrandLocationPartnerPropertyProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(default=1)),
                ('status', models.SmallIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('loc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sqs.brandlocationpartnerproperty')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partners.provider')),
            ],
            options={
                'verbose_name': 'Provider Order',
                'verbose_name_plural': 'Provider Orders',
                'unique_together': {('loc', 'provider')},
            },
        ),
        migrations.AddField(
            model_name='brandlocationpartnerproperty',
            name='providers',
            field=models.ManyToManyField(through='sqs.BrandLocationPartnerPropertyProvider', to='partners.provider'),
        ),
        migrations.AlterUniqueTogether(
            name='brandlocationpartnerproperty',
            unique_together={('brand', 'location', 'partner', 'property_group', 'device')},
        ),
    ]
