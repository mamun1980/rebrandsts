# Generated by Django 4.2.3 on 2023-11-28 11:24

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('brands', '0001_initial'),
        ('partners', '0001_initial'),
        ('property', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, unique=True)),
                ('type', models.CharField(max_length=100, unique=True)),
                ('sort_order', models.SmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, unique=True)),
                ('location_type', models.CharField(blank=True, choices=[('continent', 'Continent'), ('country', 'Country')], max_length=50, null=True)),
                ('country_code', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocationType',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='RatioLocation',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, unique=True)),
                ('location_name', models.CharField(max_length=100)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SearchLocation',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, unique=True)),
                ('search_location', models.CharField(max_length=100)),
                ('place_id', models.CharField(blank=True, max_length=100, null=True)),
                ('sort_order', models.SmallIntegerField(blank=True, null=True)),
                ('ep_location_id', models.CharField(max_length=50, unique=True)),
                ('type_level', models.SmallIntegerField(blank=True, null=True)),
                ('slug', models.CharField(blank=True, max_length=100, null=True)),
                ('location_level', models.CharField(blank=True, max_length=100, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('location_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sts.locationtype')),
            ],
        ),
        migrations.CreateModel(
            name='RatioSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('ratio_title', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ratio_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sts.ratiolocation')),
            ],
        ),
        migrations.CreateModel(
            name='RatioGroup',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('short_name', models.CharField(blank=True, editable=False, max_length=500, null=True)),
                ('archived', models.BooleanField(default=0)),
                ('click_weight_ratio', models.TextField(blank=True, null=True)),
                ('click_ratio_tiles_plan', models.TextField(blank=True, null=True)),
                ('ratio_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sts.ratioset')),
            ],
        ),
        migrations.CreateModel(
            name='PredictedRatio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=50)),
                ('predicted_ratio', models.JSONField(blank=True, null=True)),
                ('predicted_ratio_title', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('prediction_date', models.DateField()),
                ('revision', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('user_id', 'prediction_date')},
            },
        ),
        migrations.CreateModel(
            name='PartnerRatio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ratio', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partners.partner')),
                ('ratioset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sts.ratioset')),
            ],
            options={
                'unique_together': {('partner', 'ratioset')},
            },
        ),
        migrations.CreateModel(
            name='BrandLocationDefinedSetsRatio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_location_id', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('defined_set_name', models.CharField(blank=True, max_length=500, null=True)),
                ('ratio_group_data', models.JSONField(blank=True, editable=False, null=True)),
                ('ratio_set_data', models.JSONField(blank=True, editable=False, null=True)),
                ('ratio_set_title', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('predicted_ratio_title', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('property_group_name', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('device_name', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('location_name', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('brand_name', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('search_location_name', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('status', models.PositiveSmallIntegerField(default=1)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brands.brand')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sts.device')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sts.location')),
                ('predicted_ratio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sts.predictedratio')),
                ('property_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='property.propertygroup')),
                ('ratio_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sts.ratiogroup')),
                ('ratio_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sts.ratioset')),
                ('search_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sts.searchlocation')),
            ],
            options={
                'verbose_name': 'Brand Location Ratio Set',
                'verbose_name_plural': 'Brand Location Ratio Sets',
                'unique_together': {('brand', 'location', 'search_location', 'device', 'property_group')},
            },
        ),
    ]
